/*
 * Shader Evolution
 * Copyright 2016 Jonathan Giroux
 * MIT licence
 */
!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.shaderEvolution=n():t.shaderEvolution=n()}(this,function(){return function(t){function n(o){if(e[o])return e[o].exports;var i=e[o]={exports:{},id:o,loaded:!1};return t[o].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}var e={};return n.m=t,n.c=e,n.p="",n(0)}([function(t,n,e){"use strict";t.exports.Algorithm=e(1),t.exports.ArrayAccessNode=e(7),t.exports.BinaryOperatorNode=e(8),t.exports.Connection=e(2),t.exports.FunctionCallNode=e(9),t.exports.Genome=e(3),t.exports.InNode=e(10),t.exports.MemberNode=e(11),t.exports.OutNode=e(4),t.exports.Ranking=e(12),t.exports.Template=e(13),t.exports.UnaryOperatorNode=e(14)},function(t,n,e){"use strict";function o(t,n){return n.fitness-t.fitness}function i(t){return Math.floor(Math.random()*t)}function s(t){return t[i(t.length)]}function r(){return 2*Math.random()-1}function c(t,n,e){this.coefficients=t,this.templates=n,this.populationCount=e,this.genomes=[],this.rankings=[],this.awaitingRankings=[],this.nextInnovation=0}var a=e(2),u=e(3),h=e(4),p=e(5),f=e(6);c.prototype.addConnection=function(t,n,e,o,i,s){var r=t.nodes[e].getOutType(),c=t.nodes[o].getInTypes()[i];if(r===c)return t.addConnection(new a(n,e,o,i,s)),!0;var u=this.getRandomTemplate(r,c);if(u){var h=u.generate(t,n);return t.addConnection(new a(n,e,h[0],h[1],1)),t.addConnection(new a(n,h[2],o,i,s)),!0}return!1},c.prototype.addGenome=function(t){this.genomes.push(t)},c.prototype.addRandomConnection=function(t){for(var n=10;n>0;--n){var e=i(t.nodes.length),o=i(t.nodes.length);if(e!==o&&t.nodes[e].constructor!==h&&!t.areConnected(o,e)){var s=t.nodes[o].getInTypes().length;if(0!==s){var c=i(s);if(!t.doesConnectionExist(e,o,c))return this.addConnection(t,this.getNewInnovation(),e,o,c,r())}}}return!1},c.prototype.addRandomNode=function(t){if(0===t.connections.length)return!1;var n,e=5;do if(n=s(t.connections),--e,0===e)return!1;while(n.disabled);n.disabled=!0;var o=s(this.templates);if(!o)return!1;var i=this.getNewInnovation(),r=o.generate(t,i);return this.addConnection(t,i,n.outNodeIndex,r[0],r[1],1)&&this.addConnection(t,i,r[2],n.inNodeIndex,n.inParameterIndex,n.weight)},c.prototype.addRanking=function(t){this.rankings.push(t);var n=this,e=this.awaitingRankings;this.awaitingRankings=[],e.forEach(function(e){n.getSharing(e,t.genome)>0?n.genomes.push(e):n.awaitingRankings.push(e)}),this.genomes.push(t.genome)},c.prototype.computeFitness=function(t){var n=this,e=0,o=0;this.rankings.forEach(function(i){var s=n.getSharing(t,i.genome);s>0&&(e+=i.fitness,++o)}),t.wasEvaluated=o>0,t.wasEvaluated&&(t.fitness=e/o)},c.prototype.computeFitnesses=function(){var t=this;this.genomes.forEach(function(n){t.computeFitness(n);var e=t.genomes.reduce(function(e,o){return n===o?++e:e+=t.getSharing(n,o),e},0);n.fitness/=e})},c.prototype.crossover=function(t,n){var e=new u;e.nodes=t.nodes.slice();for(var o=0,i=Math.min(t.connections.length,n.connections.length);o<i;++o){var s=t.connections[o],r=n.connections[o];if(s.innovation!==r.innovation)break;Math.random()<this.coefficients.bestConnectionProbability?e.addConnection(s.clone()):e.addConnection(r.clone())}for(;o<t.connections.length;++o)e.addConnection(t.connections[o].clone());return e.fitness=.5*(t.fitness+n.fitness),e},c.prototype.evolve=function(){this.computeFitnesses();var t=this.extractEvaluatedGenomes();if(this.awaitingRankings.length>this.coefficients.maximumRankings&&this.awaitingRankings.splice(0,this.awaitingRankings.length-this.coefficients.maximumRankings),this.awaitingRankings.sort(o),0!==t.length)for(var n=new p(this.coefficients.selectionCoefficient),e=this.getSpecies(t,n);this.genomes.length<this.populationCount;){var i=n.draw(),r=i.specie,c=Math.random()<this.coefficients.interspeciesMateProbability?s(e):r,a=[i,c.draw()];a.sort(o);var u=this.crossover(a[0],a[1]);Math.random()<this.coefficients.newConnectionProbability&&!this.addRandomConnection(u)||Math.random()<this.coefficients.newNodeProbability&&!this.addRandomNode(u)||u.isValid()&&(u.mutateWeight(this.coefficients),this.genomes.push(u))}},c.prototype.extractEvaluatedGenomes=function(){var t=this,n=[];return this.genomes.forEach(function(e){e.wasEvaluated?n.push(e):t.awaitingRankings.push(e)}),this.genomes.length=0,n.sort(o),n},c.prototype.getDistance=function(t,n){for(var e=Math.max(t.connections.length,n.connections.length),o=0,i=0,s=Math.min(t.connections.length,n.connections.length);i<s;++i){var r=t.connections[i],c=n.connections[i];if(r.innovation!==c.innovation)break;o+=Math.abs(r.weight-c.weight)}var a=0;if(i<e){var u=t.connections.length-1,h=n.connections.length-1;if(t.connections[u].innovation>n.connections[h].innovation)for(;t.connections[u].innovation>n.connections[h].innovation;)++a,--u;else for(;t.connections[u].innovation<n.connections[h].innovation;)++a,--h}var p=t.connections.length+n.connections.length-2*i-a;return this.coefficients.distanceDisjoint*p+this.coefficients.distanceExcess*a+this.coefficients.distanceWeightDifference*o},c.prototype.getNewInnovation=function(){return++this.nextInnovation,this.nextInnovation},c.prototype.getRandomTemplate=function(t,n){var e=new p;return this.templates.forEach(function(o){o.outType===t&&o.inType===n&&e.add(o,o.factor)}),e.draw()},c.prototype.getSharing=function(t,n){var e=this.getDistance(t,n);return Math.max(1-Math.pow(e/this.coefficients.speciesDistanceThreshold,this.coefficients.speciesDistanceExponent),0)},c.prototype.getSpecies=function(t,n){var e=this,o=[];return t.forEach(function(t){n.add(t),o.some(function(n){if(e.getSharing(t,n.genome)>0)return n.add(t),!0})||o.push(new f(e.coefficients,t))}),o},t.exports=c},function(t,n){"use strict";function e(t,n,e,o,i){this.innovation=t,this.outNodeIndex=n,this.inNodeIndex=e,this.inParameterIndex=o,this.weight=i,this.disabled=!1}e.prototype.clone=function(){var t=new e(this.innovation,this.outNodeIndex,this.inNodeIndex,this.inParameterIndex,this.weight);return t.disabled=this.disabled,t},t.exports=e},function(t,n){"use strict";function e(t){return(Math.random()<.5?1:-1)*Math.log(1-Math.random())*t.mutateWeightAddCoefficient}function o(t){var n=1+Math.random()*t.mutateWeightMultiplyCoefficient;return Math.random()<.5?n:1/n}function i(){this.nodes=[],this.connections=[]}i.prototype.addConnection=function(t){this.connections.push(t)},i.prototype.addNode=function(t){var n=this.nodes.length;return this.nodes.push(t),n},i.prototype.areConnected=function(t,n){function e(t){if(t.outNodeIndex===o){if(t.inNodeIndex===n)return!0;s.some(function(n){return t.inNodeIndex===n})||(i.push(t.inNodeIndex),s.push(t.inNodeIndex))}}for(var o,i=[t],s=[t];i.length>0;)if(o=i.pop(),this.connections.some(e))return!0;return!1},i.prototype.doesConnectionExist=function(t,n,e){return this.connections.some(function(o){return o.outNodeIndex===t&&o.inNodeIndex===n&&o.inParameterIndex===e})},i.prototype.getSortedNodeIndexes=function(){function t(t){return t.outNodeIndex!==s||(--o[t.inNodeIndex],!1)}var n=this.connections,e=n.slice(),o=this.nodes.map(function(){return 0});n.forEach(function(t){++o[t.inNodeIndex]});for(var i=[];;){var s,r=!1;for(s=0;s<o.length;++s)if(0===o[s]){r=!0;break}if(!r)break;--o[s],i.push(s),e=e.filter(t)}return e.length>0?null:i},i.prototype.isValid=function(){var t=this.nodes;return!!this.connections.every(function(n){if("number"!=typeof n.outNodeIndex||n.outNodeIndex<0||n.outNodeIndex>=t.length)return!1;if("number"!=typeof n.inNodeIndex||n.inNodeIndex<0||n.inNodeIndex>=t.length)return!1;var e=t[n.inNodeIndex].getInTypes();if("number"!=typeof n.inParameterIndex||n.inParameterIndex<0||n.inParameterIndex>=e.length)return!1;var o=t[n.outNodeIndex].getOutType(),i=e[n.inParameterIndex];return o===i})&&null!==this.getSortedNodeIndexes()},i.prototype.mutateWeight=function(t){this.connections.forEach(function(n){Math.random()<t.weightMutationProbability&&(n.weight+=e(t),n.weight*=o(t))})},i.prototype.toShader=function(){var t=this.nodes,n=this.connections,e=this.getSortedNodeIndexes();return null===e?[]:e.map(function(e){var o=t[e],i=o.getInTypes().map(function(){return[]});n.forEach(function(t){t.inNodeIndex===e&&i[t.inParameterIndex].push("_"+t.outNodeIndex+"*"+t.weight.toFixed(10))});var s=i.map(function(t){return t.join("+")});return o.getOutType()+" _"+e+"="+o.toString(s)+";"})},t.exports=i},function(t,n){"use strict";function e(t){this.outType=t,this.inTypes=[t]}e.prototype.getInTypes=function(){return this.inTypes},e.prototype.getOutType=function(){return this.outType},e.prototype.toString=function(t){return t[0]},t.exports=e},function(t,n){"use strict";function e(t){this.coefficient=t||1,this.increment=1,this.total=0,this.array=[],this.sums=[]}e.prototype.add=function(t,n){this.total+=this.increment*(n||1),this.increment*=this.coefficient,this.array.push(t),this.sums.push(this.total)},e.prototype.draw=function(){for(var t=Math.random()*this.total,n=0,e=this.array.length-1;n<e&&!(this.sums[n]>t);++n);return this.array[n]},t.exports=e},function(t,n,e){"use strict";function o(t,n){this.genome=n,this.roulette=new i(t.selectionCoefficient),this.add(n)}var i=e(5);o.prototype.add=function(t){this.roulette.add(t),t.specie=this},o.prototype.draw=function(){return this.roulette.draw()},t.exports=o},function(t,n){"use strict";function e(t,n,e){this.index=t,this.outType=n,this.inTypes=[e]}e.prototype.getInTypes=function(){return this.inTypes},e.prototype.getOutType=function(){return this.outType},e.prototype.toString=function(t){return"("+t[0]+")["+this.index+"]"},t.exports=e},function(t,n){"use strict";function e(t,n,e){this.string=t,this.outType=n,this.inTypes=e}e.prototype.getInTypes=function(){return this.inTypes},e.prototype.getOutType=function(){return this.outType},e.prototype.toString=function(t){return"("+t[0]+")"+this.string+"("+t[1]+")"},t.exports=e},function(t,n){"use strict";function e(t,n,e){this.string=t,this.outType=n,this.inTypes=e}e.prototype.getInTypes=function(){return this.inTypes},e.prototype.getOutType=function(){return this.outType},e.prototype.toString=function(t){return this.string+"("+t.join(",")+")"},t.exports=e},function(t,n){"use strict";function e(t,n){this.string=t,this.outType=n,this.inTypes=[]}e.prototype.getInTypes=function(){return this.inTypes},e.prototype.getOutType=function(){return this.outType},e.prototype.toString=function(){return this.string},t.exports=e},function(t,n){"use strict";function e(t,n,e){this.string=t,this.outType=n,this.inTypes=[e]}e.prototype.getInTypes=function(){return this.inTypes},e.prototype.getOutType=function(){return this.outType},e.prototype.toString=function(t){return"("+t[0]+")."+this.string},t.exports=e},function(t,n){"use strict";function e(t,n){this.genome=t,this.fitness=n}t.exports=e},function(t,n){"use strict";function e(t,n,e,o){this.factor=t,this.outType=n,this.inType=e,this.generate=o}t.exports=e},function(t,n){"use strict";function e(t,n,e){this.string=t,this.outType=n,this.inTypes=[e]}e.prototype.getInTypes=function(){return this.inTypes},e.prototype.getOutType=function(){return this.outType},e.prototype.toString=function(t){return"("+this.string+"("+t[0]+"))"},t.exports=e}])});